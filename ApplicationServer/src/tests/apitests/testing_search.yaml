---
- config:
    - testset: "Testing search url"

- test:
    - name: "get all users - GET"
    - group: "[all users - OK]"
    - url: "/search?pageNumber=1&size=20"
    - method: "GET"
    - validators:
          - compare: {jsonpath_mini: "result", comparator: "count_eq", expected: 16}
          - compare: {jsonpath_mini: "metadata.total_count", comparator: "eq", expected: 16}
    - expected_status: [200] #OK

- test:
    - name: "get all users (page size less than the total count of users)- GET"
    - group: "[all users - OK]"
    - url: "/search?pageNumber=1&size=6"
    - method: "GET"
    - validators:
          - compare: {jsonpath_mini: "result", comparator: "count_eq", expected: 6}
          - compare: {jsonpath_mini: "metadata.total_count", comparator: "eq", expected: 16}
    - expected_status: [200] #OK

- test:
    - name: "get all users (page size less than the total count of users part 2)- GET"
    - group: "[all users - OK]"
    - url: "/search?pageNumber=3&size=6"
    - method: "GET"
    - validators:
          - compare: {jsonpath_mini: "result", comparator: "count_eq", expected: 4}
          - compare: {jsonpath_mini: "metadata.total_count", comparator: "eq", expected: 16}
    - expected_status: [200] #OK

- test:
    - name: "get all users pageNumber out of range - GET"
    - group: "[all users - ERROR]"
    - url: "/search?pageNumber=4&size=6"
    - method: "GET"
    - validators:
          - compare: {jsonpath_mini: "metadata.total_count", comparator: "eq", expected: 16}
          - compare: {jsonpath_mini: "result", comparator: "type", expected: None}
    - expected_status: [200] #OK

- test:
    - name: "search by first_name - GET"
    - group: "[all users - OK]"
    - url: "/search?names=lionel&pageNumber=1&size=20"
    - method: "GET"
    - validators:
          - compare: {jsonpath_mini: "metadata.total_count", comparator: "eq", expected: 1}
          - compare: {jsonpath_mini: "result.0.first_name", comparator: "eq", expected: "lionel"}
          - compare: {jsonpath_mini: "result.0.id", comparator: "eq", expected: 7}
    - expected_status: [200] #OK

- test:
    - name: "search by first_name or last name or full name - GET"
    - group: "[all users - OK]"
    - url: "/search?names=j&pageNumber=1&size=20"
    - method: "GET"
    - validators:
          - compare: {jsonpath_mini: "metadata.total_count", comparator: "eq", expected: 4}
          - compare: {jsonpath_mini: "result.0.first_name", comparator: "eq", expected: "jack"}
          - compare: {jsonpath_mini: "result.1.first_name", comparator: "eq", expected: "jane"}
          - compare: {jsonpath_mini: "result.2.first_name", comparator: "eq", expected: "john"}
          - compare: {jsonpath_mini: "result.3.last_name", comparator: "eq", expected: "jordan"}
    - expected_status: [200] #OK
    
- test:
    - name: "search by first_name or last name or full name - GET"
    - group: "[all users - ERROR]"
    - url: "/search?names=wk&pageNumber=1&size=20"
    - method: "GET"
    - validators:
          - compare: {jsonpath_mini: "metadata.total_count", comparator: "eq", expected: 0}
    - expected_status: [200] #OK
 
- test:
    - name: "search by full name - GET"
    - group: "[all users - OK]"
    - url: "/search?names=JacK%20sparrow&pageNumber=1&size=20"
    - method: "GET"
    - validators:
          - compare: {jsonpath_mini: "metadata.total_count", comparator: "eq", expected: 1}
          - compare: {jsonpath_mini: "result.0.first_name", comparator: "eq", expected: "jack"}
          - compare: {jsonpath_mini: "result.0.last_name", comparator: "eq", expected: "sparrow"}
    - expected_status: [200] #OK
 
- test:
    - name: "search by mail regex - GET"
    - group: "[all users - OK]"
    - url: "/search?mails=JacK&pageNumber=1&size=20"
    - method: "GET"
    - validators:
          - compare: {jsonpath_mini: "metadata.total_count", comparator: "eq", expected: 2}
          - compare: {jsonpath_mini: "result.0.first_name", comparator: "eq", expected: "jack"}
          - compare: {jsonpath_mini: "result.0.last_name", comparator: "eq", expected: "sparrow"}
          - compare: {jsonpath_mini: "result.1.first_name", comparator: "eq", expected: "el que no es"}
    - expected_status: [200] #OK    

- test:
    - name: "search by full mail - GET"
    - group: "[all users - OK]"
    - url: "/search?mails=jack@sparrow.com&pageNumber=1&size=20"
    - method: "GET"
    - validators:
          - compare: {jsonpath_mini: "metadata.total_count", comparator: "eq", expected: 1}
          - compare: {jsonpath_mini: "result.0.first_name", comparator: "eq", expected: "jack"}
          - compare: {jsonpath_mini: "result.0.last_name", comparator: "eq", expected: "sparrow"}
    - expected_status: [200] #OK    

- test:
    - name: "search by one skill - GET"
    - group: "[search skill - ERROR]"
    - url: "/search?skills=jack&pageNumber=1&size=20"
    - method: "GET"
    - validators:
          - compare: {jsonpath_mini: "metadata.total_count", comparator: "eq", expected: 0}
    - expected_status: [200] #OK    

- test:
    - name: "search by one skill - GET"
    - group: "[search skill - ERROR]"
    - url: "/search?skills=ninJa&pageNumber=1&size=20"
    - method: "GET"
    - validators:
          - compare: {jsonpath_mini: "metadata.total_count", comparator: "eq", expected: 0}
    - expected_status: [200] #OK    

- test:
    - name: "search by one skill - GET"
    - group: "[search skill - OK]"
    - url: "/search?skills=caFE&pageNumber=1&size=20"
    - method: "GET"
    - validators:
          - compare: {jsonpath_mini: "metadata.total_count", comparator: "eq", expected: 0}
    - expected_status: [200] #OK    

- test:
    - name: "search by one position - GET"
    - group: "[search position - OK]"
    - url: "/search?positions=NinJa&pageNumber=1&size=20"
    - method: "GET"
    - validators:
          - compare: {jsonpath_mini: "metadata.total_count", comparator: "eq", expected: 4}
    - expected_status: [200] #OK

- test:
     - name: "search by several positions - GET"
     - group: "[search position - OK]"
     - url: "/search?positions=NinJa,developer&pageNumber=1&size=20"
     - method: "GET"
     - validators:
           - compare: {jsonpath_mini: "metadata.total_count", comparator: "eq", expected: 1}
           - compare: {jsonpath_mini: "result.0.first_name", comparator: "eq", expected: "maria"}
     - expected_status: [200] #OK

- test:
     - name: "search by everything  - GET"
     - group: "[search - OK]"
     - url: "/search?names=maria&mails=maria&skills=pHp&positions=NinJa,developer&pageNumber=1&size=20"
     - method: "GET"
     - validators:
           - compare: {jsonpath_mini: "metadata.total_count", comparator: "eq", expected: 1}
           - compare: {jsonpath_mini: "result.0.first_name", comparator: "eq", expected: "maria"}
     - expected_status: [200] #OK


- test:
     - name: "search by distance  - GET"
     - group: "[search distane - OK]"
     - url: "/search?distances=-57.368468,-31.627529,1000000&pageNumber=1&size=20"
     - method: "GET"
     - validators:
           - compare: {jsonpath_mini: "metadata.total_count", comparator: "eq", expected: 16}
     - expected_status: [200] #OK

- test:
     - name: "search by distance  get the point - GET"
     - group: "[search distane - OK]"
     - url: "/search?distances=-57.368468,-31.627529,0&pageNumber=1&size=20"
     - method: "GET"
     - validators:
           - compare: {jsonpath_mini: "metadata.total_count", comparator: "eq", expected: 2}
           - compare: {jsonpath_mini: "result.0.id", comparator: "eq", expected: 8 }
           - compare: {jsonpath_mini: "result.1.id", comparator: "eq", expected: 16 }
     - expected_status: [200] #OK


- test:
     - name: "search by distance  get the point - GET"
     - group: "[search distane - ERROR]"
     - url: "/search?distances=-57.368468,0&pageNumber=1&size=20"
     - method: "GET"
     - expected_status: [400] #BAD REQUEST

- test:
     - name: "search by distance  get the point and name - GET"
     - group: "[search distane - OK]"
     - url: "/search?names=jack&distances=-57.368468,-31.627529,0&pageNumber=1&size=20"
     - method: "GET"
     - validators:
           - compare: {jsonpath_mini: "metadata.total_count", comparator: "eq", expected: 1}
           - compare: {jsonpath_mini: "result.0.id", comparator: "eq", expected: 8 }
     - expected_status: [200] #OK
